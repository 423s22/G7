import React$1, { useEffect, useCallback } from 'react';
import debounce$1 from 'lodash/debounce';
import styles from './ScrollContainer.scss.esnext';

function ScrollContainer({
  children,
  scrollableContainerRef,
  onScroll
}) {
  useEffect(() => {
    if (!scrollableContainerRef.current) return;
    scrollableContainerRef.current.dispatchEvent(new Event('scroll'));
  }, [scrollableContainerRef]); // eslint-disable-next-line react-hooks/exhaustive-deps

  const handleScroll = useCallback(debounce$1(() => {
    if (!scrollableContainerRef.current) {
      return;
    }

    const availableScrollAmount = scrollableContainerRef.current.scrollWidth - scrollableContainerRef.current.offsetWidth;
    const canScrollLeft = scrollableContainerRef.current.scrollLeft > 0;
    const canScrollRight = scrollableContainerRef.current.scrollLeft < availableScrollAmount;
    onScroll(canScrollLeft, canScrollRight);
  }, 40, {
    trailing: true,
    leading: true,
    maxWait: 40
  }), [onScroll, scrollableContainerRef]);
  return /*#__PURE__*/React$1.createElement("div", {
    className: styles.ScrollContainer,
    ref: scrollableContainerRef,
    onScroll: handleScroll
  }, children);
}

export { ScrollContainer };
